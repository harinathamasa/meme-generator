{"ast":null,"code":"import _defineProperty from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/harinathamasa/Documents/my-app/src/Components/MemeGenerator.js\";\nimport React, { Component } from \"react\";\n\nvar MemeGenerator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MemeGenerator, _Component);\n\n  function MemeGenerator() {\n    var _this;\n\n    _classCallCheck(this, MemeGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MemeGenerator).call(this));\n    _this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MemeGenerator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.imgflip.com/get_memes\").then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var memes = response.data.memes;\n\n        _this2.setState({\n          allMemeImgs: memes\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n    /**\n     * Create a method that, when the \"Gen\" button is clicked, chooses one of the\n     * memes from our `allMemeImgs` array at random and makes it so that is the\n     * meme image that shows up in the bottom portion of our meme generator site (`.url`)\n     */\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n      var randMemeImg = this.state.allMemeImgs[randNum].url;\n      this.setState({\n        randomImg: randMemeImg\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        placeholder: \"Top Text\",\n        value: this.state.topText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        placeholder: \"Bottom Text\",\n        value: this.state.bottomText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Gen\")), React.createElement(\"div\", {\n        className: \"meme\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.randomImg,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.topText), React.createElement(\"h2\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.bottomText)));\n    }\n  }]);\n\n  return MemeGenerator;\n}(Component);\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/harinathamasa/Documents/my-app/src/Components/MemeGenerator.js"],"names":["React","Component","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","setState","event","target","name","value","preventDefault","randNum","Math","floor","random","length","randMemeImg","url"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\n\nclass MemeGenerator extends Component {\n    constructor() {\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    \n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                this.setState({ allMemeImgs: memes })\n            })\n    }\n    \n    handleChange(event) {\n        const {name, value} = event.target\n        this.setState({ [name]: value })\n    }\n    \n    /**\n     * Create a method that, when the \"Gen\" button is clicked, chooses one of the\n     * memes from our `allMemeImgs` array at random and makes it so that is the\n     * meme image that shows up in the bottom portion of our meme generator site (`.url`)\n     */\n    \n    handleSubmit(event) {\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randMemeImg = this.state.allMemeImgs[randNum].url\n        this.setState({ randomImg: randMemeImg })\n    }\n    \n    render() {\n        return (\n            <div>\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n                    <input \n                        type=\"text\"\n                        name=\"topText\"\n                        placeholder=\"Top Text\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                    /> \n                    <input \n                        type=\"text\"\n                        name=\"bottomText\"\n                        placeholder=\"Bottom Text\"\n                        value={this.state.bottomText}\n                        onChange={this.handleChange}\n                    /> \n                \n                    <button>Gen</button>\n                </form>\n                <div className=\"meme\">\n                    <img src={this.state.randomImg} alt=\"\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}