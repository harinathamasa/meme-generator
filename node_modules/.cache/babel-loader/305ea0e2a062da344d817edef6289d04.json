{"ast":null,"code":"import _classCallCheck from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/harinathamasa/Documents/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/harinathamasa/Documents/my-app/src/Components/MemeGenerator.js\";\nimport React from \"react\";\n\nvar MemeGenerator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MemeGenerator, _React$Component);\n\n  function MemeGenerator() {\n    var _this;\n\n    _classCallCheck(this, MemeGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MemeGenerator).call(this));\n    _this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemImgs: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MemeGenerator, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState({});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"meme-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        placeholder: \"Top Text\",\n        value: this.state.topText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        placeholder: \"Bottom Text\",\n        value: this.state.bottomText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.imgflip.com/get_memes\").then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        var memes = res.data.memes;\n        console.log(memes);\n\n        _this2.setState({\n          allMemImgs: memes\n        });\n      });\n    }\n  }]);\n\n  return MemeGenerator;\n}(React.Component);\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/harinathamasa/Documents/my-app/src/Components/MemeGenerator.js"],"names":["React","MemeGenerator","state","topText","bottomText","randomImg","allMemImgs","handleChange","bind","event","target","name","value","setState","fetch","then","response","json","res","memes","data","console","log","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,a;;;;;AAEF,2BAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAC,EAFF;AAGTC,MAAAA,SAAS,EAAE,+BAHF;AAITC,MAAAA,UAAU,EAAC;AAJF,KAAb;AAMA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AARS;AASZ;;;;iCAEYC,K,EAAM;AAAA,0BACKA,KAAK,CAACC,MADX;AAAA,UACTC,IADS,iBACTA,IADS;AAAA,UACJC,KADI,iBACJA,KADI;AAEf,WAAKC,QAAL,CAAc,EAAd;AAGH;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AACG,QAAA,IAAI,EAAC,SADR;AAEG,QAAA,WAAW,EAAC,UAFf;AAGG,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,OAHrB;AAIG,QAAA,QAAQ,EAAE,KAAKI,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAOA;AAAO,QAAA,IAAI,EAAC,MAAZ;AACG,QAAA,IAAI,EAAC,YADR;AAEG,QAAA,WAAW,EAAC,aAFf;AAGG,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAHrB;AAIG,QAAA,QAAQ,EAAE,KAAKG,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,CADL,CADJ;AAmBH;;;wCAEkB;AAAA;;AACfO,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EACuCF,IADvC,CAC4C,UAAAG,GAAG,EAAG;AAAA,YACnCC,KADmC,GAC1BD,GAAG,CAACE,IADsB,CACnCD,KADmC;AAE1CE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,QAAA,MAAI,CAACN,QAAL,CAAc;AACVP,UAAAA,UAAU,EAACa;AADD,SAAd;AAGH,OAPL;AAQH;;;;EAnDuBnB,KAAK,CAACuB,S;;AAwDlC,eAAetB,aAAf","sourcesContent":["import React from \"react\"\n\nclass MemeGenerator extends React.Component{\n\n    constructor(){\n        super()\n        this.state = {\n            topText :\"\",\n            bottomText:\"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemImgs:[]\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event){\n        const{name,value} = event.target\n        this.setState({\n\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                 <form className=\"meme-form\">\n                 <input type=\"text\" \n                    name=\"topText\" \n                    placeholder=\"Top Text\" \n                    value={this.state.topText}\n                    onChange={this.handleChange}\n                />\n                 <input type=\"text\" \n                    name=\"bottomText\" \n                    placeholder=\"Bottom Text\" \n                    value={this.state.bottomText}\n                    onChange={this.handleChange}\n                />\n\n                 </form>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json()).then(res =>{\n                const {memes} = res.data\n                console.log(memes)\n                this.setState({\n                    allMemImgs:memes\n                })\n            })\n    }\n\n}\n\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}